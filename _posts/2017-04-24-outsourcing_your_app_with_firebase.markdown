---
layout: post
title:  "Outsourcing your app with Firebase"
date:   2017-04-24 03:24:03 +0000
---

Okay,  to set the record straight, this isn't a how-to guide for calling someone in a developing country and pitching them your app idea. It's just a rant about a pretty neat tool I found whilst building some apps.

One of the most useful tools I’ve stumbled upon during my journey of programming mastery is Firebase. For those of you unfamiliar, Firebase is a development platform that contains numerous services that assist in your development cycle. According to Wikipedia Firebase is a “platform of infrastructure designed to help developers build high-quality apps”, to me it’s a get-out-of-jail-free card with jail being the mundane backend stuff.
One of the reasons I enjoy Firebase is because I basically get to outsource half my app. 
When developing new applications or dynamic sites, I like to firstly focus on the front-end design and an attractive mockup. However, to get the look and feel correct, it’s important to have some data to manipulate. Normally, this is addressed by building a database and seeding it with some test data. You’d then have to build a functioning backend for your front end to make calls to display the data. Well I’m lazy, so fuck that.
Writing an API for an app is an integral part of the development process, but when building a trial application, I like to follow the KISS principal we’re taught in 6th grade. Keep It Simple Stupid. Firebase allows me to kiss my backend goodbye. This is because Firebase has an awesome real-time backend service that provides an API for you to synchronize your data with. It allows you to make calls to their API to store or retrieve data without cluttering your app with a resource intensive backend. What’s even better is that your data is stored in this mythical place called the cloud, which in the case of Firebase is backed and secured by Google so you can be sure Skynet won’t get a hold of your valuable cat pics (or in my case fennec foxes).
In addition to the backend database, there’s two noteworthy Firebase services I generally abuse. First on the line is Firebase Auth.  As you may have guessed from the name, Firebase Auth is a service that can authenticate users using only client-side code. I took that directly from Wikipedia, because laziness.  Firebase Auth is a pretty cool service because it allows you to authenticate users via common social providers such a Facebook, Twitter and Google without crazy Omniauth backend setups (if you’re a ruby backend kinda person). The other service I frequently use is Firebase Hosting. There’s nothing crazy about their hosting, it’s similar to GitHub pages in that it supports hosting of static files. However, I enjoy keeping my Firebase app in one area and thus I often opt for Firebase hosting instead of GitHub.   Also, I found that many of my SPA (single page apps) does not display correctly on GitHub pages but that may be due to my own negligence.
In sum, Firebase is impressive tool that allows you to quickly develop high quality applications without spending too much time on fleshing out the back end. It is not optimal (in my opinion) when you must do some crazy integration with external APIs and such, but is more than suitable for the average use case. This isn’t to say that Firebase can’t be used in product, it has an extensive roster of amazing applications using their backend such as Shazam and Sky-scanner. For me, it’s merit is in its ease of use and well fleshed out documentation. Initially I intended to include the Firebase setup process but it’s straightforward and you know… lazy. 

